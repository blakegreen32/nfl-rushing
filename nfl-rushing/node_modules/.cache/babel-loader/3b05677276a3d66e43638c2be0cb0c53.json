{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/nfl-rushing/src/components/NFLPlayerTable.js\";\nimport NFLPlayer from './NFLPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NFLPlayerTableBody = ({\n  nflPlayers\n}) => {\n  let currentSort = 'default';\n\n  function onSortChange(key) {\n    if (key === 'Yds' || key === 'Lng' || key === 'TD') {\n      let nextSort;\n      if (currentSort === key + 'Down') nextSort = key + 'Up';else if (currentSort === key + 'Up') nextSort = 'default';else if (currentSort === 'default') nextSort = key + 'Down';\n      currentSort = nextSort;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(nflPlayers[0]).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: onSortChange(key),\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: nflPlayers.sort(sortTypes[currentSort].fn).map((nflPlayer, index) => /*#__PURE__*/_jsxDEV(NFLPlayer, {\n        nflPlayer: nflPlayer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NFLPlayerTableBody;\nexport default NFLPlayerTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFLPlayerTableBody\");","map":{"version":3,"sources":["/Users/blakegreen/nfl-rushing/src/components/NFLPlayerTable.js"],"names":["NFLPlayer","NFLPlayerTableBody","nflPlayers","currentSort","onSortChange","key","nextSort","Object","keys","map","sort","sortTypes","fn","nflPlayer","index"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAE7C,MAAIC,WAAW,GAAG,SAAlB;;AAEA,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,QAAKA,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,KAAzB,IAAkCA,GAAG,KAAK,IAA/C,EAAsD;AACpD,UAAIC,QAAJ;AAEA,UAAKH,WAAW,KAAKE,GAAG,GAAG,MAA3B,EAAoCC,QAAQ,GAAGD,GAAG,GAAG,IAAjB,CAApC,KACK,IAAKF,WAAW,KAAKE,GAAG,GAAG,IAA3B,EAAkCC,QAAQ,GAAG,SAAX,CAAlC,KACA,IAAIH,WAAW,KAAK,SAApB,EAA+BG,QAAQ,GAAGD,GAAG,GAAG,MAAjB;AAEpCF,MAAAA,WAAW,GAAGG,QAAd;AACD;AACF;;AAED,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA,kBAEIC,MAAM,CAACC,IAAP,CAAYN,UAAU,CAAC,CAAD,CAAtB,EAA2BO,GAA3B,CAAgCJ,GAAD,IAAS;AACtC,8BACE;AAAc,YAAA,OAAO,EACnBD,YAAY,CAACC,GAAD,CADd;AAAA,mCAGE;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AAHF,aAASA,GAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAA,gBACGH,UAAU,CAACQ,IAAX,CAAgBC,SAAS,CAACR,WAAD,CAAT,CAAuBS,EAAvC,EAA2CH,GAA3C,CAA+C,CAACI,SAAD,EAAYC,KAAZ,kBAC9C,QAAC,SAAD;AAAuB,QAAA,SAAS,EAAED;AAAlC,SAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAxCD;;KAAMb,kB;AA0CN,eAAeA,kBAAf","sourcesContent":["import NFLPlayer from './NFLPlayer'\n\nconst NFLPlayerTableBody = ({ nflPlayers }) => {\n\n  let currentSort = 'default';\n\n  function onSortChange(key) {\n    if ( key === 'Yds' || key === 'Lng' || key === 'TD' ) {\n      let nextSort;\n  \n      if ( currentSort === key + 'Down' ) nextSort = key + 'Up';\n      else if ( currentSort === key + 'Up' ) nextSort = 'default';\n      else if (currentSort === 'default') nextSort = key + 'Down';\n  \n      currentSort = nextSort;\n    }\n  }\n\n  return (\n    <div>\n      <thead>\n        <tr>\n          {\n            Object.keys(nflPlayers[0]).map((key) => {\n              return (\n                <th key={key} onClick={\n                  onSortChange(key)\n                  }>\n                  <h3>{key}</h3>\n                </th>\n              )\n            })\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {nflPlayers.sort(sortTypes[currentSort].fn).map((nflPlayer, index) => (\n          <NFLPlayer key={index} nflPlayer={nflPlayer} />\n        ))}\n      </tbody>\n    </div>\n  )\n}\n\nexport default NFLPlayerTableBody"]},"metadata":{},"sourceType":"module"}