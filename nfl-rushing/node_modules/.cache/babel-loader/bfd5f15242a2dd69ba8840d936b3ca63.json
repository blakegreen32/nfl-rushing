{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/nfl-rushing/src/components/NFLPlayerTable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport NFLPlayer from './NFLPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NFLPlayerTableBody = ({\n  nflPlayers\n}) => {\n  _s();\n\n  const [sortState, setSortState] = useState('default');\n\n  function parseValue(val1, val2, replace, key) {\n    return parseInt(val.replace(replace, ''));\n  }\n\n  const sortTypes = {\n    YdsUp: {\n      class: 'yds-up',\n      fn: function (a, b) {\n        var val1 = a['Yds'];\n        var val2 = b['Yds'];\n\n        if (typeof val1 === 'string') {\n          val1 = parseValue(val1, ',');\n        }\n\n        if (typeof val2 === 'string') {\n          val2 = parseValue(val2, ',');\n        }\n\n        return val1 - val2;\n      }\n    },\n    YdsDown: {\n      class: 'yds-down',\n      fn: function (a, b) {\n        var val1 = a['Yds'];\n        var val2 = b['Yds'];\n\n        if (typeof val1 === 'string') {\n          val1 = parseValue(val1, ',');\n        }\n\n        if (typeof val2 === 'string') {\n          val2 = parseValue(val2, ',');\n        }\n\n        return val2 - val1;\n      }\n    },\n    LngUp: {\n      class: 'lng-up',\n      fn: function (a, b) {\n        var val1 = a['Lng'];\n        var val2 = b['Lng'];\n\n        if (typeof val1 === 'string') {\n          val1 = parseValue(val1, 'T');\n        }\n\n        if (typeof val2 === 'string') {\n          val2 = parseValue(val2, 'T');\n        }\n\n        return val1 - val2;\n      }\n    },\n    LngDown: {\n      class: 'lng-down',\n      fn: function (a, b) {\n        var val1 = a.Lng;\n        var val2 = b.Lng;\n\n        if (typeof val1 === 'string') {\n          val1 = parseValue(val1, 'T');\n        }\n\n        if (typeof val2 === 'string') {\n          val2 = parseValue(val2, 'T');\n        }\n\n        return val2 - val1;\n      }\n    },\n    TDUp: {\n      class: 'td-up',\n      fn: (a, b) => a.TD - b.TD\n    },\n    TDDown: {\n      class: 'td-down',\n      fn: (a, b) => b.TD - a.TD\n    },\n    default: {\n      class: 'sort',\n      fn: (a, b) => a\n    }\n  };\n\n  function isSort(key) {\n    return key === 'Yds' || key === 'Lng' || key === 'TD';\n  }\n\n  function onSortChange(key) {\n    if (isSort(key)) {\n      let nextSort;\n      if (sortState === key + 'Down') nextSort = key + 'Up';else if (sortState === key + 'Up') nextSort = 'default';else if (sortState === 'default') nextSort = key + 'Down';else {\n        nextSort = key + 'Up';\n      }\n      setSortState(nextSort);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(nflPlayers[0]).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"pointer\",\n              onClick: () => onSortChange(key),\n              children: isSort(key) ? '\\u2B0D' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: nflPlayers.sort(sortTypes[sortState].fn).map((nflPlayer, index) => /*#__PURE__*/_jsxDEV(NFLPlayer, {\n        nflPlayer: nflPlayer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NFLPlayerTableBody, \"QJaDl3VqNkGDSmWry1/y1OZVnp4=\");\n\n_c = NFLPlayerTableBody;\nexport default NFLPlayerTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFLPlayerTableBody\");","map":{"version":3,"sources":["/Users/blakegreen/nfl-rushing/src/components/NFLPlayerTable.js"],"names":["useState","NFLPlayer","NFLPlayerTableBody","nflPlayers","sortState","setSortState","parseValue","val1","val2","replace","key","parseInt","val","sortTypes","YdsUp","class","fn","a","b","YdsDown","LngUp","LngDown","Lng","TDUp","TD","TDDown","default","isSort","onSortChange","nextSort","Object","keys","map","sort","nflPlayer","index"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport NFLPlayer from './NFLPlayer'\n\nconst NFLPlayerTableBody = ({ nflPlayers }) => {\n  const [sortState, setSortState] = useState('default')\n\n  function parseValue(val1, val2, replace, key) {\n    return parseInt(val.replace(replace, ''));\n  }\n\n  const sortTypes = {\n    YdsUp: {\n      class: 'yds-up',\n      fn: function(a, b) {\n        var val1 = a['Yds'];\n        var val2 = b['Yds'];\n        if (typeof val1 === 'string' )  {\n          val1 = parseValue(val1, ',')\n        }\n        if ( typeof val2 === 'string' ) {\n          val2 = parseValue(val2, ',')\n        }\n        return val1 - val2\n      } \n    },\n    YdsDown: {\n      class: 'yds-down',\n      fn: function(a, b) {\n        var val1 = a['Yds'];\n        var val2 = b['Yds'];\n        if ( typeof val1 === 'string' )  {\n          val1 = parseValue(val1, ',')\n        }\n        if ( typeof val2 === 'string' ) {\n          val2 = parseValue(val2, ',')\n        }\n        return val2 - val1\n      } \n    },\n    LngUp: {\n      class: 'lng-up',\n      fn: function (a, b) {\n        var val1 = a['Lng'];\n        var val2 = b['Lng'];\n        if ( typeof val1 === 'string' ) {\n          val1 = parseValue(val1, 'T')\n        }\n        if ( typeof val2 === 'string' ) {\n          val2 = parseValue(val2, 'T')\n        }\n        return val1 - val2\n      }\n    },\n    LngDown: {\n      class: 'lng-down',\n      fn: function (a, b) {\n        var val1 = a.Lng;\n        var val2 = b.Lng;\n        if ( typeof val1 === 'string' ) {\n          val1 = parseValue(val1, 'T')\n        }\n        if ( typeof val2 === 'string' ) {\n          val2 = parseValue(val2, 'T')\n        }\n        return val2 - val1\n      }\n    },\n    TDUp: {\n      class: 'td-up',\n      fn: (a, b) => a.TD - b.TD\n    },\n    TDDown: {\n      class: 'td-down',\n      fn: (a, b) => b.TD - a.TD\n    },\n    default: {\n      class: 'sort',\n      fn: (a,b) => a\n    }\n  }\n\n  function isSort(key) {\n    return ( key === 'Yds' || key === 'Lng' || key === 'TD' )\n  }\n\n  function onSortChange(key) {\n    if ( isSort(key) ) {\n      let nextSort;\n  \n      if ( sortState === key + 'Down' ) nextSort = key + 'Up'\n      else if ( sortState === key + 'Up' ) nextSort = 'default'\n      else if ( sortState === 'default' ) nextSort = key + 'Down'\n      else { nextSort = key + 'Up' }\n  \n      setSortState(nextSort)\n    }\n  }\n\n  return (\n    <>\n      <thead>\n        <tr>\n          {\n            Object.keys(nflPlayers[0]).map((key) => {\n              return (\n                <th key={key}>\n                  <p class='pointer' onClick= {() => onSortChange(key)} >{isSort(key) ? '\\u2B0D' : ''}</p>\n                  <h3>{key}</h3>\n                </th>\n              )\n            })\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {nflPlayers.sort(sortTypes[sortState].fn).map((nflPlayer, index) => (\n          <NFLPlayer key={index} nflPlayer={nflPlayer} />\n        ))}\n      </tbody>\n    </>\n  )\n}\n\nexport default NFLPlayerTableBody"]},"metadata":{},"sourceType":"module"}