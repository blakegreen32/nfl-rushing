{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/nfl-rushing/src/components/NFLPlayerTable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport NFLPlayer from './NFLPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NFLPlayerTableBody = ({\n  nflPlayers\n}) => {\n  _s();\n\n  const [sortState, setSortState] = useState('default');\n  const sortTypes = {\n    YdsUp: {\n      class: 'yds-up',\n      fn: function (a, b) {\n        return parseInt(a.Y) - b.Yds;\n      }\n    },\n    YdsDown: {\n      class: 'yds-down',\n      fn: (a, b) => b.Yds - a.Yds\n    },\n    LngUp: {\n      class: 'lng-up',\n      fn: (a, b) => a.Lng - b.Lng\n    },\n    LngDown: {\n      class: 'lng-down',\n      fn: (a, b) => b.Lng - a.Lng\n    },\n    TDUp: {\n      class: 'td-up',\n      fn: (a, b) => a.TD - b.TD\n    },\n    TDDown: {\n      class: 'td-down',\n      fn: (a, b) => b.TD - a.TD\n    },\n    default: {\n      class: 'sort',\n      fn: (a, b) => a\n    }\n  };\n\n  function onSortChange(key) {\n    if (key === 'Yds' || key === 'Lng' || key === 'TD') {\n      let nextSort;\n      if (sortState === key + 'Down') nextSort = key + 'Up';else if (sortState === key + 'Up') nextSort = 'default';else if (sortState === 'default') nextSort = key + 'Down';else {\n        nextSort = key + 'Up';\n      }\n      setSortState(nextSort);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(nflPlayers[0]).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => onSortChange(key),\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: nflPlayers.sort(sortTypes[sortState].fn).map((nflPlayer, index) => /*#__PURE__*/_jsxDEV(NFLPlayer, {\n        nflPlayer: nflPlayer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NFLPlayerTableBody, \"QJaDl3VqNkGDSmWry1/y1OZVnp4=\");\n\n_c = NFLPlayerTableBody;\nexport default NFLPlayerTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFLPlayerTableBody\");","map":{"version":3,"sources":["/Users/blakegreen/nfl-rushing/src/components/NFLPlayerTable.js"],"names":["useState","NFLPlayer","NFLPlayerTableBody","nflPlayers","sortState","setSortState","sortTypes","YdsUp","class","fn","a","b","parseInt","Y","Yds","YdsDown","LngUp","Lng","LngDown","TDUp","TD","TDDown","default","onSortChange","key","nextSort","Object","keys","map","sort","nflPlayer","index"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport NFLPlayer from './NFLPlayer'\n\nconst NFLPlayerTableBody = ({ nflPlayers }) => {\n  const [sortState, setSortState] = useState('default')\n\n  const sortTypes = {\n    YdsUp: {\n      class: 'yds-up',\n      fn: function(a, b) {\n        return parseInt(a.Y) - b.Yds\n      } \n    },\n    YdsDown: {\n      class: 'yds-down',\n      fn: (a, b) => b.Yds - a.Yds\n    },\n    LngUp: {\n      class: 'lng-up',\n      fn: (a, b) => a.Lng - b.Lng\n    },\n    LngDown: {\n      class: 'lng-down',\n      fn: (a, b) => b.Lng - a.Lng\n    },\n    TDUp: {\n      class: 'td-up',\n      fn: (a, b) => a.TD - b.TD\n    },\n    TDDown: {\n      class: 'td-down',\n      fn: (a, b) => b.TD - a.TD\n    },\n    default: {\n      class: 'sort',\n      fn: (a,b) => a\n    }\n  }\n\n  function onSortChange(key) {\n    if ( key === 'Yds' || key === 'Lng' || key === 'TD' ) {\n      let nextSort;\n  \n      if ( sortState === key + 'Down' ) nextSort = key + 'Up'\n      else if ( sortState === key + 'Up' ) nextSort = 'default'\n      else if ( sortState === 'default' ) nextSort = key + 'Down'\n      else { nextSort = key + 'Up' }\n  \n      setSortState(nextSort)\n    }\n  }\n\n  return (\n    <>\n      <thead>\n        <tr>\n          {\n            Object.keys(nflPlayers[0]).map((key) => {\n              return (\n                <th key={key} onClick= {() => onSortChange(key)} >\n                  <h3>{key}</h3>\n                </th>\n              )\n            })\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {nflPlayers.sort(sortTypes[sortState].fn).map((nflPlayer, index) => (\n          <NFLPlayer key={index} nflPlayer={nflPlayer} />\n        ))}\n      </tbody>\n    </>\n  )\n}\n\nexport default NFLPlayerTableBody"]},"metadata":{},"sourceType":"module"}