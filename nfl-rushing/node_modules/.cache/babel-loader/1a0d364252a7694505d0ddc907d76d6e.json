{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/nfl-rushing/src/components/NFLPlayerTable.js\";\nimport NFLPlayer from './NFLPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NFLPlayerTableBody = ({\n  nflPlayers\n}) => {\n  let currentSort = 'default';\n  const sortTypes = {\n    YdsUp: {\n      class: 'yds-up',\n      fn: (a, b) => a.Yds - b.Yds\n    },\n    YdsDown: {\n      class: 'yds-down',\n      fn: (a, b) => b.Yds - a.Yds\n    },\n    LngUp: {\n      class: 'lng-up',\n      fn: (a, b) => a.Lng - b.Lng\n    },\n    LngDown: {\n      class: 'lng-down',\n      fn: (a, b) => b.Lng - a.Lng\n    },\n    TDUp: {\n      class: 'td-up',\n      fn: (a, b) => a.TD - b.TD\n    },\n    TDDown: {\n      class: 'td-down',\n      fn: (a, b) => b.TD - a.TD\n    },\n    default: {\n      class: 'sort',\n      fn: (a, b) => a\n    }\n  };\n\n  function onSortChange(key) {\n    if (key === 'Yds' || key === 'Lng' || key === 'TD') {\n      let nextSort;\n      if (currentSort === key + 'Down') nextSort = key + 'Up';else if (currentSort === key + 'Up') nextSort = 'default';else if (currentSort === 'default') nextSort = key + 'Down';\n      currentSort = nextSort;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(nflPlayers[0]).map(key => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onSortChange(key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: nflPlayers.sort(sortTypes[currentSort].fn).map((nflPlayer, index) => /*#__PURE__*/_jsxDEV(NFLPlayer, {\n        nflPlayer: nflPlayer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = NFLPlayerTableBody;\nexport default NFLPlayerTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFLPlayerTableBody\");","map":{"version":3,"sources":["/Users/blakegreen/nfl-rushing/src/components/NFLPlayerTable.js"],"names":["NFLPlayer","NFLPlayerTableBody","nflPlayers","currentSort","sortTypes","YdsUp","class","fn","a","b","Yds","YdsDown","LngUp","Lng","LngDown","TDUp","TD","TDDown","default","onSortChange","key","nextSort","Object","keys","map","sort","nflPlayer","index"],"mappings":"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","sourcesContent":["import NFLPlayer from './NFLPlayer'\n\nconst NFLPlayerTableBody = ({ nflPlayers }) => {\n\n  let currentSort = 'default';\n\n  const sortTypes = {\n    YdsUp: {\n      class: 'yds-up',\n      fn: (a, b) => a.Yds - b.Yds\n    },\n    YdsDown: {\n      class: 'yds-down',\n      fn: (a, b) => b.Yds - a.Yds\n    },\n    LngUp: {\n      class: 'lng-up',\n      fn: (a, b) => a.Lng - b.Lng\n    },\n    LngDown: {\n      class: 'lng-down',\n      fn: (a, b) => b.Lng - a.Lng\n    },\n    TDUp: {\n      class: 'td-up',\n      fn: (a, b) => a.TD - b.TD\n    },\n    TDDown: {\n      class: 'td-down',\n      fn: (a, b) => b.TD - a.TD\n    },\n    default: {\n      class: 'sort',\n      fn: (a,b) => a\n    }\n  }\n\n  function onSortChange(key) {\n    if ( key === 'Yds' || key === 'Lng' || key === 'TD' ) {\n      let nextSort;\n  \n      if ( currentSort === key + 'Down' ) nextSort = key + 'Up';\n      else if ( currentSort === key + 'Up' ) nextSort = 'default';\n      else if ( currentSort === 'default' ) nextSort = key + 'Down';\n  \n      currentSort = nextSort;\n    }\n  }\n\n  return (\n    <>\n      <thead>\n        <tr>\n          {\n            Object.keys(nflPlayers[0]).map((key) => {\n              return (\n                <>\n                  <button onClick= {() => onSortChange(key)} />\n                  <th key={key}>\n                    <h3>{key}</h3>\n                  </th>\n                </>\n              )\n            })\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {nflPlayers.sort(sortTypes[currentSort].fn).map((nflPlayer, index) => (\n          <NFLPlayer key={index} nflPlayer={nflPlayer} />\n        ))}\n      </tbody>\n    </>\n  )\n}\n\nexport default NFLPlayerTableBody"]},"metadata":{},"sourceType":"module"}