{"version":3,"sources":["components/NFLPlayer.js","components/NFLPlayerTable.js","components/NFLPlayers.js","components/Pagination.js","components/SearchBox.js","App.js","index.js"],"names":["NFLPlayer","nflPlayer","Object","keys","map","key","NFLPlayerTable","nflPlayers","useState","sortState","setSortState","parseValue","val1","val2","replace","value1","value2","parseInt","sortTypes","YdsUp","class","fn","a","b","YdsDown","LngUp","LngDown","TDUp","TD","TDDown","default","isSort","length","onClick","onSortChange","className","sort","index","NFLPlayers","loading","Pagination","playersPerPage","totalPlayers","paginate","pageNumbers","i","Math","ceil","push","number","href","SearchBox","props","type","placeholder","onChange","handleChange","App","setNflPlayers","searchTerm","setSearchTerm","currentPage","setCurrentPage","setLoading","useEffect","fetchNflPlayers","nflPlayersFromServer","getNflPlayers","fetch","method","headers","res","json","data","filterNflPlayers","filter","val","Player","toLowerCase","includes","toString","exportCsv","filename","link","csv","args","result","ctr","columnDelimiter","lineDelimiter","join","forEach","item","convertArrayToCSV","match","encodeURI","document","createElement","setAttribute","click","indexOfLastPlayer","indexOfFirstPlayer","currentPlayers","slice","e","target","value","pageNumber","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00608162.chunk.js","sourcesContent":["const NFLPlayer = ({nflPlayer}) => {\n  return (\n    <tr>\n      {Object.keys(nflPlayer).map((key) => {\n        return (\n          <td key={key}>\n            <h5>{nflPlayer[key]}</h5>\n          </td>\n        )\n      })}\n    </tr>\n  )\n}\n\nexport default NFLPlayer","import {useState} from 'react'\nimport NFLPlayer from './NFLPlayer'\n\nconst NFLPlayerTable = ({nflPlayers}) => {\n  const [sortState, setSortState] = useState('default')\n\n  function parseValue(val1, val2, replace, key) {\n    var value1 = val1[key];\n    var value2 = val2[key];\n    if ( typeof value1 === 'string' ) value1 = parseInt(value1.replace(replace, ''));\n    if ( typeof value2 === 'string' ) value2 = parseInt(value2.replace(replace, ''));\n    return value1 - value2;\n  }\n\n  const sortTypes = {\n    YdsUp: {\n      class: 'yds-up',\n      fn: function(a, b) {\n        return parseValue(a, b, ',', 'Yds')\n      } \n    },\n    YdsDown: {\n      class: 'yds-down',\n      fn: function(a, b) {\n        return parseValue(b, a, ',', 'Yds')\n      } \n    },\n    LngUp: {\n      class: 'lng-up',\n      fn: function (a, b) {\n        return parseValue(a, b, 'T', 'Lng')\n      }\n    },\n    LngDown: {\n      class: 'lng-down',\n      fn: function (a, b) {\n        return parseValue(b, a, 'T', 'Lng')\n      }\n    },\n    TDUp: {\n      class: 'td-up',\n      fn: (a, b) => a.TD - b.TD\n    },\n    TDDown: {\n      class: 'td-down',\n      fn: (a, b) => b.TD - a.TD\n    },\n    default: {\n      class: 'sort',\n      fn: (a,b) => a\n    }\n  }\n\n  function isSort(key) {\n    return ( key === 'Yds' || key === 'Lng' || key === 'TD' )\n  }\n\n  function onSortChange(key) {\n    if ( isSort(key) ) {\n      let nextSort;\n  \n      if ( sortState === key + 'Down' ) nextSort = key + 'Up'\n      else if ( sortState === key + 'Up' ) nextSort = key + 'Down'\n      else if ( sortState === 'default' ) nextSort = key + 'Down'\n      else { nextSort = key + 'Up' }\n  \n      setSortState(nextSort)\n    }\n  }\n\n  return (\n    <>\n      <thead>\n        <tr>\n          {nflPlayers.length > 0 ? (\n              Object.keys(nflPlayers[0]).map((key) => {\n                return (\n                  <th key={key}>\n                    <p onClick={()=>onSortChange(key)}>{isSort(key)?'\\u2B0D':''}</p>\n                    <h3>{key}</h3>\n                  </th>\n                )\n              })\n          ):<td className=\"empty\">No Matches</td>}\n        </tr>\n      </thead>\n      <tbody>\n        {nflPlayers.sort(sortTypes[sortState].fn).map((nflPlayer, index) => (\n          <NFLPlayer key={index} nflPlayer={nflPlayer} />\n        ))}\n      </tbody>\n    </>\n  )\n}\n\nexport default NFLPlayerTable","import NFLPlayerTable from './NFLPlayerTable'\n\nconst NFLPlayers = ({nflPlayers, loading}) => {\n\n  if ( loading ) {\n    return <h2>Loading...</h2>\n  }\n  \n  return (\n    <table>\n      <NFLPlayerTable nflPlayers={nflPlayers}/>\n    </table>\n  )\n}\n\nexport default NFLPlayers\n","const Pagination = ({ playersPerPage, totalPlayers, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPlayers / playersPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return(\n    <div>\n      <span>Pages:</span>\n      <ul className=\"marginTop\">\n        {pageNumbers.map(number => (\n          <li key={number}>\n            <a onClick={() => paginate(number)} href=\"!#\">\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Pagination","const SearchBox = (props) => {\n  return(\n    <input type=\"search\" className=\"search\" placeholder={props.placeholder} onChange={props.handleChange} />\n  )\n}\n\nexport default SearchBox","import { useState, useEffect } from 'react'\nimport NFLPlayers from './components/NFLPlayers'\nimport Pagination from './components/Pagination'\nimport SearchBox from './components/SearchBox'\n\nconst App = () => {\n  const [nflPlayers, setNflPlayers] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [playersPerPage] = useState(500)\n  const [loading, setLoading] = useState(false)\n\n\n  useEffect(() => {\n    const getNflPlayers = async () => {\n      const nflPlayersFromServer = await fetchNflPlayers()\n      setNflPlayers(nflPlayersFromServer)\n      setLoading(false)\n    }\n\n    getNflPlayers() \n  }, [])\n\n  // Fetch Tasks\n  const fetchNflPlayers = async () => {\n    setLoading(true)\n    const res = await fetch('http://localhost:5000/nflPlayers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n    const data = await res.json()\n    return data \n  }\n\n  function filterNflPlayers(nflPlayers) {\n    return nflPlayers.filter((val) => val.Player.toLowerCase().includes(searchTerm.toString().toLowerCase()))\n  }\n\n  function convertArrayToCSV( args ) {\n    var result, ctr, keys, columnDelimiter, lineDelimiter, data;\n    data = args.data || null;\n    if ( data == null || ! data.length ) {\n      return null;\n    }\n\n    columnDelimiter = args.columnDelimiter || ',';\n    lineDelimiter = args.lineDelimiter || '\\n';\n\n    keys = Object.keys(data[0]);\n    result = '';\n    result += keys.join(columnDelimiter);\n    result += lineDelimiter;\n\n    data.forEach(function(item) {\n      ctr = 0;\n      keys.forEach(function(key) {\n        if (ctr > 0) result += columnDelimiter;\n        result += item[key];\n        ctr++;\n      });\n      result += lineDelimiter;\n    });\n\n    return result;\n  }\n\n  function exportCsv(nflPlayers) {\n    var data, filename, link;\n    var csv = convertArrayToCSV({\n      data: nflPlayers\n    });\n\n    if (csv == null) return;\n    filename = nflPlayers.filename || 'nfl_players.csv';\n\n    if ( !csv.match(/^data:text\\/csv/i )) {\n      csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n    data = encodeURI(csv);\n\n    link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.click();\n  }\n\n  const indexOfLastPlayer = currentPage * playersPerPage;\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\n  const currentPlayers = nflPlayers.slice(indexOfFirstPlayer, indexOfLastPlayer);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container'>\n      <h1>NFL Player Statistics</h1>\n      <SearchBox placeholder=\"Search Players...\" handleChange={(e) => setSearchTerm(e.target.value)} />\n      <button onClick= {() => exportCsv(filterNflPlayers(currentPlayers))}>Export CSV</button>\n      <Pagination playersPerPage={playersPerPage} totalPlayers={nflPlayers.length} paginate={paginate} />\n      {nflPlayers.length > 0 ? (\n        <NFLPlayers nflPlayers={filterNflPlayers(currentPlayers)} loading={loading}/>\n      ):<div className=\"marginTop\">No NFL Players</div>}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}